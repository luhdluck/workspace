{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\react-formulario\\\\src\\\\components\\\\AdicionaCliente.jsx\";\nimport React from 'react';\nimport { Formik, Field, useField } from 'formik';\n\nconst Campo = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, props, {\n    className: meta.error && meta.touched ? 'is-invalid' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  })), meta.error && meta.touched ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, meta.error) : null);\n};\n\nconst AdicionaCliente = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Clientes\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nome: '',\n      email: '',\n      nascimento: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.nome) {\n        errors.nome = 'O nome é obrigatório';\n      }\n\n      if (!values.email) {\n        errors.email = 'O email é obrigatório';\n      } else if (!/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+\\.([a-z]+)?$/i.teste(values.email)) {\n        errors.email = 'O email é invalido';\n      }\n\n      if (!values.nascimento) {\n        errors.nascimento = 'A data de nascimento é obrigatória';\n      }\n\n      return errors;\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Campo, {\n    id: \"nome\",\n    name: \"nome\",\n    type: \"text\",\n    label: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Campo, {\n    id: \"nascimento\",\n    name: \"nascimento\",\n    type: \"date\",\n    label: \"Data de Nascimento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Adicionar\"))));\n};\n\nexport default AdicionaCliente;","map":{"version":3,"sources":["C:/workspace/react-formulario/src/components/AdicionaCliente.jsx"],"names":["React","Formik","Field","useField","Campo","label","props","field","meta","id","error","touched","AdicionaCliente","nome","email","nascimento","values","errors","teste","alert","JSON","stringify","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik , Field, useField } from 'formik';\n\nconst Campo = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n    return (\n      <div className=\"form-group\">\n        <label htmlFor={props.id}>{label}</label>\n        <input\n          {...field}\n          {...props}\n          className={meta.error && meta.touched ? 'is-invalid' : ''}\n        />\n        {meta.error && meta.touched ? (\n          <div className=\"invalid-feedback\">{meta.error}</div>\n        ) : null}\n      </div>\n    );\n}\n\nconst AdicionaCliente = () => {\n  return (\n    <>\n      <h1>Cadastro de Clientes</h1>\n      <Formik \n      initialValues={{nome: '',email: '', nascimento:''}} \n      validate={(values)=> {\n        const errors ={};\n        if(!values.nome) {\n          errors.nome = 'O nome é obrigatório'\n        }\n        if(!values.email) {\n          errors.email = 'O email é obrigatório'\n        }else if (!/^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+\\.([a-z]+)?$/i.teste(values.email)) {\n          errors.email = 'O email é invalido'\n        }\n        if(!values.nascimento) {\n          errors.nascimento = 'A data de nascimento é obrigatória'\n        }\n        return errors;\n      }}\n      onSubmit={(values)=> {\n        alert(JSON.stringify(values));\n      }}>\n        {(props)=> (\n          <form onSubmit={props.handleSubmit} noValidate>\n              <Campo\n               id=\"nome\" \n               name=\"nome\" \n               type=\"text\" \n               label=\"Nome\"/>\n              <Campo\n              id=\"email\" \n              name=\"email\" \n              type=\"email\" \n              label=\"Email\"/>\n              <Campo\n              id=\"nascimento\" \n              name=\"nascimento\" \n              type=\"date\" \n              label=\"Data de Nascimento\"/>\n            <button type=\"submit\">Adicionar</button>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AdicionaCliente;\n"]},"metadata":{},"sourceType":"module"}